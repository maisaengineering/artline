%section#main-content.cus
  %section.wrapper
    %section.panel
      .product_layer
        - unless @items[true].blank?
          #items_with_price
            %header.panel-heading.no-border
              Quoted Product's
            = form_tag project_path(@project), method: :put do
              %table.table.table-bordered
                %thead
                  %tr
                    %th #
                    %th Product details
                    %th Quantity
                    %th Supplier Price (per item)
                    %th Markup
                    %th Customer Price
                %tbody

                - @items[true].to_a.each_with_index do |item, index |
                  = hidden_field_tag "project[item_list][][id]", item.id,class: "items_with_prices"
                  %tr.quotations
                    %td
                      #{index+1}
                    %td
                      - if item["type"].eql?("Mirror")
                        = render "projects/product_details/#{item["type"].downcase}", item: item
                      - elsif item["type"].eql?("Lamp")
                        = render "projects/product_details/#{item["type"].downcase}", item: item
                      - elsif item["type"].eql?("ArtificialPlant")
                        = render "projects/product_details/#{item["type"].downcase}", item: item
                      - elsif item["type"].eql?("Artwork")
                        = render "projects/product_details/artworks/#{item.product["artwork_type"].downcase}", item: item
                    %td
                      = number_field_tag "project[item_list][][quantity]", item["quantity"]
                      X
                    %td
                      = select_tag("project[item_list][][number]", options_for_select(Price.where(product_id: item["product_id"],project_id: @project.id).asc(:supplier_cost).map{|c|["#{c.companies_supplier.name}($#{c.supplier_cost.to_f})", c.artline_item_number]}, item.number), class:"example-multiple-selected")
                    %td
                      +
                      =  number_field_tag "project[item_list][][additional_charges]", item["additional_charges"]||2
                      ="%"
                    %td.client_price
                - unless  @saved_rfqs.blank?
                  %tr
                    %td{colspan:6}
                      .row
                        .col-md-9
                          %b{style: "float: right;"}
                            Shippling Cost :
                      - @saved_rfqs.each do |rfq|
                        .row
                          .col-md-3
                          .col-md-3
                          .col-md-3
                            %span{style: "float: right;"}
                              = "#{rfq.supplier.name} :"
                          .col-md-3
                            %span{style: "float: right;"}
                              - if rfq.shipping_cost?
                                .shipping_cost
                                  = rfq.shipping_cost
                              - else
                                not yet received
                %tr
                  %td{colspan:6}
                    .row
                      .col-md-9
                        %b{style: "float: right;"}
                          Total :
                      .col-md-3
                        .total_client_price{style: "float: right;"}
                -#%tr
                -#  %td
                -#  %td
                -#  %td{colspan:3} Shipping Cost
                -#  %td
                -#%tr
                -#  %td
                -#  %td
                -#  %td{colspan:3} Total
                -#  %td.total_client_price
              .col-md-12
                %p
                  = submit_tag "Save", class: "btn btn-primary "
        - unless @items[false].blank?
          #items_without_price
            %header.panel-heading.no-border
              Need Quoting
            %table.table.table-bordered
              %thead
                %tr
                  %th #
                  %th Product details
                  %th Quantity
                  %th Supplier List
              %tbody
              - @items[false].to_a.each_with_index do |item, index |
                %tr
                  %td
                    #{index+1}
                  %td
                    - if item["type"].eql?("Mirror")
                      = render "projects/product_details/#{item["type"].downcase}", item: item
                    - elsif item["type"].eql?("Lamp")
                      = render "projects/product_details/#{item["type"].downcase}", item: item
                    - elsif item["type"].eql?("ArtificialPlant")
                      = render "projects/product_details/#{item["type"].downcase}", item: item
                    - elsif item["type"].eql?("Artwork")
                      = render "projects/product_details/artworks/#{item.product["artwork_type"].downcase}", item: item
                  %td
                    = number_field_tag "project[item_list][][quantity]", item["quantity"]
                  %td{style: "width: 36%"}
                    = select_tag("suppliers", options_for_select(Companies::Supplier.all.map{|c|[c.name, c.id]}), class:"example-multiple-selected", multiple: true, data:{item_id: item.id.to_s})
        - if @items[false].blank?

          .col-md-12
            %p
              -#= link_to "Email Customer Quote",send_quotation_project_url(@project.id),class: "btn btn-primary"
              %button.btn.btn-primary{"data-target" => "#emailsModal", "data-toggle" => "modal", :type => "button"} Email Customer Quote
          .col-md-12
            %p
              = link_to "Download Customer Quote", customer_qoute_project_url(@project.id, format: 'pdf'), target: "_blank",class: "btn btn-primary"
          .col-md-12
            %p
              -#= link_to "Place Order", "#",class: "btn btn-primary"
              %button.btn.btn-primary{"data-target" => "#PlaceOrderModal", "data-toggle" => "modal", :type => "button"} Place Order
        - else
          .col-md-12.mbtm15
            = link_to "Request Suppliers Quote", "#", id: "request_suppliers_quote",class: "btn btn-primary"

    %button.btn.btn-primary{"data-target" => "#AddSupplier", "data-toggle" => "modal", type: "button",style: "margin-left: 14px;"} Add Supplier

#AddSupplier.modal.fade{"aria-labelledby" => "exampleModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog{:role => "document"}
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} &times;
        %h4#exampleModalLabel.modal-title New Supplier
      .modal-body
        .form-group
          .row
            .col-md-5.mbtm15
              = text_field_tag("company[name]", nil, class: "form-control", placeholder: "Company Name", required: true)
              %span.company_name_error{style: "color: red; display: none"}
                please enter the company name
            .col-md-6.mbtm15
              .row
                .col-md-12#field.cmp_att
                  = text_field_tag("company[attention][]", nil, class: "attention", placeholder: "Attention")
                  %button#b1.btn#add-more{:type => "button"} +
              %span.attention_error{style: "color: red; display: none"}
                please enter atleast one attention
          .row
            .col-md-5.mbtm15
              = text_field_tag("company[address]", nil, class: "form-control", placeholder: "Address", required: true)
              %span.address_error{style: "color: red; display: none"}
                please enter the address
            .col-md-5.mbtm15
              = text_field_tag("company[city]", nil, class: "form-control", placeholder: "City", required: true)
              %span.city_error{style: "color: red; display: none"}
                please enter city
          .row
            .col-md-5.mbtm15
              = text_field_tag("company[state]", nil,class: "form-control", placeholder: "State", required: true)
              %span.state_error{style: "color: red; display: none"}
                please enter state
            .col-md-5.mbtm15
              = text_field_tag("company[zip]", nil, class: "form-control", placeholder: "Zip", required: true)
              %span.zip_error{style: "color: red; display: none"}
                please enter zip code
          .row
            .col-md-5.mbtm15
              = phone_field_tag("company[phone]", nil, class: "form-control", placeholder: "Phone", required: true)
              %span.phone_error{style: "color: red;"}
            .col-md-5.mbtm15
              = email_field_tag("company[email]", nil, class: "form-control", placeholder: "Email", required: true)
              %span.email_error{style: "color: red;"}
      .modal-footer.email_model_footer
        %button.btn.btn-default{"data-dismiss" => "modal", type: "button"} Close
        %button.btn.btn-success.create_supplier Submit



#PlaceOrderModal.modal.fade{"aria-labelledby" => "exampleModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog{:role => "document"}
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} &times;
        %h4#exampleModalLabel.modal-title From: Artline
      .modal-body
        .form-group
          %div
            PO NUMBER :
          = text_field_tag "po_number", nil, class: "form-control"
          %span.po_error{style: "color: red; display: none"}
            please enter process order number
          %span.errors{style: "color: red; display: none"}
          .modal-footer.email_model_footer
            %button.btn.btn-default{"data-dismiss" => "modal", type: "button"} Close
            %button.btn.btn-success.place_order Submit


#emailsModal.modal.fade{"aria-labelledby" => "exampleModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog{:role => "document"}
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} &times;
        %h4#exampleModalLabel.modal-title From: Artline
      .modal-body
        = form_tag(send_quotation_project_url(@project.id), method: :get) do
          .form-group
            %div
              = label_tag "Recipient:"
            = text_field_tag "emails", @project.client.email, class: "form-control","data-role"=>"tagsinput"
            .modal-footer.email_model_footer
              %button.btn.btn-default{"data-dismiss" => "modal", type: "button"} Close
              = submit_tag "Send message", class: "btn btn-primary"



:javascript


    $(".create_supplier").click(function(){
    var name = $("#company_name").val()
    var attention_with_empty_strings = $.map($(".attention"),function(n){
                        return n.value
                         });
    var attention =  attention_with_empty_strings.filter(function(v){return v!==''});
    var address = $("#company_address").val()
    var city = $("#company_city").val()
    var state = $("#company_state").val()
    var zip = $("#company_zip").val()
    var phone = $("#company_phone").val()
    var email = $("#company_email").val()
     if( name == ""){ $(".company_name_error").show();}
     else{ $(".company_name_error").hide();}
     if( attention.length < 1){ $(".attention_error").show();}
     else{ $(".attention_error").hide();}
     if( address == ""){$(".address_error").show();}
     else{ $(".address_error").hide();}
     if( city == ""){ $(".city_error").show();}
     else{ $(".city_error").hide();}
     if( state == ""){ $(".state_error").show();}
     else{ $(".state_error").hide();}
     if( zip == ""){ $(".zip_error").show();}
     else{ $(".zip_error").hide();}
     if( phone == ""){ $(".phone_error").html("please enter phone number");}
     else{ $(".phone_error").html("");}
     if( email == ""){ $(".email_error").html("please enter the company email");}
     else{ $(".email_error").html("");}
     if(phone.length > 0){
            var reg = /(^\d{10}$)/;
            if(!reg.test(phone))
            {
                $(".phone_error").html("Invalid phone number must be 10 digits");
                return false;
            }
        }
     function validateEmail(txtEmail){
        var email_add = txtEmail
        var filter = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
        if(filter.test(email_add)){
            return true;
        }
        else{
            return false;
        }
     }
     if(email && !validateEmail(email)){
           $(".email_error").html("Invalid email");
           return false;
         }
     if(( name != "" ) && (attention.length > 0) && (address != "") && (city != "") && (state != "") && (zip != "") && (phone != "") && (email != "")){
         url ="/companies"
         $.ajax({
           url: url,
           type: "POST",
           dataType: "json",
           data: {"company[name]": name,"company[attention][]": attention,
                  "company[address]": address,"company[city]": city,
                  "company[state]": state,"company[zip]": zip,
                  "company[phone]": phone,"company[email]": email,_type: "Supplier"},
             beforeSend: function(){
                 $("#AddSupplier").hide()
                 $('.loading-indicator').show()
                 },
             success:function(data){
                 $('.loading-indicator').hide()
                 alert(data.message)
                 location.reload();
             }
         });
     }
    })


    $(".place_order").click(function(e){
        e.preventDefault();
        var po_num = $("#po_number").val();

        if (po_num == ""){
            $('.errors').hide();
            $(".po_error").show();
        }
        else{
            $(".po_error").hide();
            var items_ids = $.map($(".items_with_prices"),function(n){
                        return n.value
                         });
            $.ajax({
              method: "POST",
              dataType: 'json',
              url: location + "/create_order",
              data: {items_ids: items_ids,po_number: po_num},
              beforeSend: function(){
               $("#PlaceOrderModal").hide()
               $('.loading-indicator').show()
               },
              success: function(data){
                if(data.message.length > 0){
                  $('.errors').show().html(data.message)
                }
                else{
                  $('.loading-indicator').hide()
                  alert("Successfully created")
                  location= data.redirect_url;
                }
              }
            });
        }
    })

  var $$inputs_changed = false;
  $("#items_with_price tr.quotations").each(function(e){
     $tds = $(this).find('td');

     x = eval($tds.eq(2).find("input").val()) * eval($tds.eq(3).find("select option:selected").text().match(/\$\d+.\d+/)[0].replace("$",''));
     x += x*eval($tds.eq(4).find("input").val())/100;
     x = x.toFixed(2)
     $tds.eq(5).text(x);
     total = 0
     shp_cost = 0
     $('.shipping_cost').each(function(e){shp_cost += eval($(this).text())})
     $('.client_price').each(function(e){total += eval($(this).text())})
     $('.total_client_price').text((total + shp_cost).toFixed(2));

  });

  $('.example-multiple-selected').multiselect({
      buttonWidth: '293px',
      maxHeight: 192,
  });

  $("#request_suppliers_quote").click(function(e){
      e.preventDefault();
      $data = new Object();
      $("#items_without_price select").each(function(index){
        $select = $(this);
        if($select.val()){
          $.each($select.val(), function(index, value){
            if($data[value]){
               console.log($select.attr("data-item-id"));
               $data[value] = $data[value].concat($select.attr("data-item-id"))
            }else{
               $data[value] = [$select.attr("data-item-id")]
            }
          });
        }
      });

      if(!$.isEmptyObject($data)){
        $.ajax({
          url: location+"/rfq",
          method: 'POST',
          dataType: 'json',
          data: {rsq_data: $data},
          beforeSend: function(){
               $('.loading-indicator').show()
               },
          success: function(data){
            $('.loading-indicator').hide()
            alert("Request Successfully sent")
            location= data.redirect_url;
          },
          error: function(data){
            console.log(data)
            console.log(path, arguments)
          }

        })
      }else{
          alert("Oops! please choose atleast one supplier.");
      }

  })

  $("#items_with_price tr.quotations input").change(function(){
     $$inputs_changed = true;

     $tds = $(this).closest("tr").find('td')
     x = eval($tds.eq(2).find("input").val()) * eval($tds.eq(3).find("select option:selected").text().match(/\$\d+.\d+/)[0].replace("$",''));
     x += x*eval($tds.eq(4).find("input").val())/100;
     x = x.toFixed(2)
     $tds.eq(5).text(x)
     total = 0
     shp_cost = 0
     $('.shipping_cost').each(function(e){shp_cost += eval($(this).text())})
     $('.client_price').each(function(e){total += eval($(this).text())})
     $('.total_client_price').text((total + shp_cost).toFixed(2));
  })



